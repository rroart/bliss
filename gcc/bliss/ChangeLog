2002-06-23  Tim Josling  <tej@melbpc.org.au>

	Port to GCC 3.2. From now on I am tracking the gcc mainline, not
	the weekly snapshots. Note a patch to GCC (gengtype.c) is needed
	to make the build work. This should be up on the CVS repository in
	a few days. 
	
	* All: Revamp of memory management / garbage collection and
	toplev.c interface, langhooks. 

	* blicgty.c: New.
	* blicgty.h: New.

	Revamp of BLI_* type defines. BLI_UINT8 is now uchar, BLI_UINT32
	is now uint32, etc. 

	* All: rename of types as above. 

	Revamp of build of preprocessor tokens as new version of bison
	makes the old method (sed edits) difficult. 

	* blippr1.tpl: New.
	* bliplx2.tpl: New.
	* blippr1.def: New.
	* blippr1.y: Now generated.

2002-06-22  Tim Josling  <tej@melbpc.org.au>

	* Make-lang.in: Add bliss-generated-manpages target.

2002-05-19  Tim Josling  <tej@melbpc.org.au>

        Multi-precision arithmetic from David Sadler. 
	
	* blir_MP.h: New.
	* blir_MP_add.h: New.

2002-05-11  Tim Josling  <tej@melbpc.org.au>

        Remove unused code. 
	
	* genCode.c: Remove.
	* filter.lhs: Remove.

	Add Coding Standards
	
	* CODINGSTDS: Add.
	* fdl.texi: Add. 

	Add TODO list.
	* TODO: Add.

	CALL/PROCEDURE DIVISION USING
	Native data types for numeric coding. 
	
	* blir_main.c: Add.
	* Make-lang.in: Add build for blir_main.c
	* blicast.c (process_storage): Ensure only WORKING-STORAGE items
	that are 01 level and are not redefines are EXTERNAL.
	* blicbei.c (output_program_epilog): Remove program sequence parameter.
	(output_program_code): Ditto.
	And change all callers. 
	(output_program_prolog): Use 'as' name. If main program, output
	data item with address of this program for blir_main.c to call.
	* blicc1.c (option_main_name): Add.
	(option_main_found). Add. 
	(option_allow_dollar_in_varnames). Remove. "-" will be translated into 
	$ instead.
	(bli_decode_option). Process -fmain=NAME instead of -fmain.
	Do not process -fdollars-in-identifiers option.
	(cmp_process_file): Warn if main specified but not found.
	Tidy up whitespace.
	* bliclex.l (find_keyword): Check if underscore in variable name.
	* blicmsg.c (message_info_array): Changed messages (115) 
	Underscore in variable names (133) change to main not found (163)
	language specified not C, 
	Added messages (200, 201, 202, 203).
	* blicprs.tpl: Partial support for EXTERNAL/CALL/Program-id AS.
	* blicsyt.h: Remove repository, add EXTERNAL, add support for AS
	for program-id.
	* bliplex.l: Replace support for "$" in identifier by "_".
	* blipmsg.c: Replace support for "$" in identifier by "_".
	* blippru.c: Replace support for "$" in identifier by "_".
	* blipre.c: Replace support for "$" in identifier by "_".
	* blir_temp_config.h: define native INT data types for numeric
	coding.  
	* bliumsg.c (output_pedantic): Set to output msg if underscore
	found in identifier.
	* bliumsg.h (output_pedantic): Set to output msg if underscore
	found in identifier.
	(bli_message_info): Change "$" flag name to "_".

	Cleanup.

	* config-lang.in: Remove diff-excludes (no longer used)
	* lang-options: Remove dollar in variable options, use pedantic
	now.
	
2002-04-21  Tim Josling  <tej@melbpc.org.au>

	Add PERFORM verb and tests.
	* blicast.c, blicbei.c, blicsyt.h, blicprs.tpl
	Numerous associated changes. 

2002-04-01  Tim Josling  <tej@melbpc.org.au>

	Port to gcc 3.1; clean up make processing; allow testing without
	installing.

        * Make-lang.in: Use xgcc (build compiler) if present else use
	standard compiler $(CC). Don't force install before check. Pass
	appropriate compiler and flags to check.

	* blicbei.c (output_move): fix test for numeric display. Fix gcc
	warnings about uninitialized variables. 
	(output_group_item) fix up context for group items. 

	* blicc1.c (language_string): Update supported gcc snapshot date. 

	* blir_compare.c (blir_compare_rc): Move to end of file to prevent
	inlining which does not work (gcc bug probably; inlining within a
	return statement).

	* blipre.c (global): reorder include files trying to get around
	problems with bool. 

	* blir_display.c (putItem): remove compiler warning about sign
	mismatch in fputc.

	(putPacked) "
	(blir_display) "

	* test_blir_compare.c (error_count): add.
	(doTest) Increment error_count. 
	
2001-12-26  Tim Josling  <tej@melbpc.org.au>

        * Make-lang.in: Remove safe-ctype.o
	* blipre.c: Do not include safe-ctype.h 

2001-08-30  Tim Josling  <tej@melbpc.org.au>

	* blicc1.c: Update gcc snapshot date. 

2001-08-30  Linga Ramakrishna <kisti@lucent.com>

	* blir_intrinsic_lower.c
	* blir_intrinsic_lower.h
	* test_blir_intrinsic_lower.c
	Replace by 
	* blir_intrinsic_case_conversions.c
	* blir_intrinsic_case_conversions.h
	* test_blir_intrinsic_case_conversions.c
	and add upper case conversions. 
	* Make-lang.in - change names per above. 
	
2001-08-19  Tim Josling  <tej@melbpc.org.au>

	* blicc1.c: Update gcc snapshot date. 

	IF verb now working. 
	
	* Make-lang.in (file): Commented code to use msta parser generator.
	Add build, install and tests for blir_intrinsic_lower_case.c and kin.
	Restore verbose output for bison.

	* blicast.c (file): Add linked list for ends of sentences that need
	goto labels.
	(get_literal): New
	(dump_syntax_tree): Extra parameter to control printing of 'next'
	items. Change calls. Print expression operator. 
	(explore_statement): Code to handle new fake NEXT SENTENCE verb.
	(explore_condition): Restructure to support abbreviated
	conditions. 
	(get_data_item): support extra relational condition types
	(explore_non_atomic_condition): change NOT_magic... to NOT_kw
	- value was reset in parser.
	(explore_expression):  Use data_item correctly, not assuming it's
	an expression. Support extra relational condition types.

	* blicbei.c (output_next_sentence_verb): 
	(output_verb) Support next sentence verb.
	(get_exp_details) Support level 88 in expression.
	(output_program_epilog) More checking of types.	
	(conditional_test) Switch AND and OR tests. Check NOT_magic
	expressions not passed to here. 
	(basic_conditional_test) Reverse > and < tests.
	(generate_compare) Ensure len is initialized. Make checks
	conditional on data item being non NULL. Ensure numeric compare with
	zero is done numerically. Fix up compare of 64 bit signed and
	unsigned ints. Fix alphanumeric compare logic was all wrong. 
	(convert_two_compares_to_result) Make logic correct. 
	(generate_dynamic_character_compare) Make logic correct. 
	(generate_character_compare_fill) Make logic correct. Ensure
	runtime routine is type int32. 
	(generate_level_88_test) Fix logic. Use gcc types not bliss types
	when passing to gcc. 
	(generate_level_88_comparison) Fill in expression type and
	class. Pass parameters in the right order. 
	(output_set_verb_condition) Support level_88 expression. Fill in
	expression type and class. 

	* blicprs.tpl (file) : add bogus production to reduce spurious
	msta error messages. Only check procedure division if present,
	numerous other bug fixes. ABBREVIATED_UNKNOWN_sym used as
	expression type for incomplete relational comparison.  Ensure all
	productions set $$, for compatibility with msta. 

	* blicpru.c (update_for_relational): Fix up logic to set
	NOT_magic, was setting wrong token. Was also keeping going past
	the correct point. 

	* blicsyt.h (file) New BLI_TREE_TYPE_VERB_SENTENCE and associated
	struct. 

	* blictok.def (file) New token MEGA_BOGUS.

	
	
2001-07-15  Tim Josling  <tej@melbpc.org.au>

        Snapshot 09Jul2001

	IF verb now to clean compile stage. 
	
	* blicc1.c (language_string) Update snapshot date.  * blicast.c
	(validate_procedure_division) Change to ANSI function header.
	(explore_statement) Record fact that a fullstop is target of a
	'next sentence'.
	(explore_non_atomic_condition) Specify conditions that are
	supported in expression.
	(mark_save) New to note that expression has to be used more than
	once but should be calculated only once.
	(check_save) New to check if expression has to be saved.
	(explore_non_atomic_condition) Check if there was a previous
	operand/operator for abbreviated condition. Save them also.
	(check_comparable) Add missing quote[s]. Check not comparing ALL numeric.
	(check_move_compatible) provide 'all' parameter on call to get_type
	(get_type) new 'all' flag
	(all) Replace LEFT_PARENTHESIS by ARRAY_REFERENCE in expressions for clarity.

	* blicbei.c (struct exp_details) Add fields first_char and
	level_88_di.
	(space_exp) New for single space character expression.
	(memcmp_decl) New
	(output_program_code) Move most verb code to output_verb for use
	within IF
	(output_verb) New function
	(output_move) Move space_exp to file global variable. Add check
	for numeric display. Use first_char in exp_details. Use
	integer_one_node where appropriate.
	(get_exp_details) Fix up function header layout. Special code for
	level 88. Set first_char. Use set_to_numeric_zero instead of doing it manually.
	(set_to_numeric_zero) new
	(build_labels) Simplify first time logic. 
	(build_end_of_sentence_labels) new (for NEXT SENTENCE)
	(output_if_verb) Fill in the logic. 
	(conditional_test) New.
	(basic_conditional_test) New.
	(generate_compare) New. 
	(convert_two_compares_to_result) New. 
	(swap_operator) New. 
	(generate_dynamic_character_compare) New. 
	(generate_character_compare) New. 
	(generate_character_compare_fill) New. 
	(generate_all_compare) New.
	(generate_level_88_test) New. 
	(generate_level_88_single_test) New.
	(generate_level_88_comparison) New.
	(init_decl_processing) Add roots for BLISS types. Create space_exp.
	(build_builtin_functions) Build memcmp builtin.

	* bliclex.l (all) Fix up alignment. 

	* blicmsg.c (bli_message_info message_info_arr) New messages 197 198 199.

	* blicprs.tpl (yyparse) Replace from_numeric_exp with from_item to
	fix R/R conflicts in grammar.

	* blicstyt.h (bli_tree_struct_save_details) New.
	(value_type) Change to enum.
	(bli_tree_struct_verb_fullstop) Add fields next_to_make_decls,
	save_decl, used.

	* blictok.def (all) add new tokens BOGUS1, ARRAY_REFERENCE, SAVE_MAIN.

	* blir_cmp.h (all) New
	* blir_cmp.c (all) New
	* test_blir_cmp.c (all) New

	
2001-07-01  Tim Josling  <tej@melbpc.org.au>

	* blicast.c (match_corresponding): rework logic to ensure that
	everything that matches and is not ambiguous is moved.  Previously
	some 'almost ambiguous' items - items that were ambiguous at one
	level but not overall - did not get moved.
	(explore_statement): new, derived from code in
	validate_procedure_division.  Add logic for NEXT SENTENCE and also
	for fullstops - the target of the NEXT SENTENCE implicit goto. 
	(validate_procedure_division): move code into explore_statement
	(explore_if):  call explore_statement for if/else statements. 
	* blictok.def (top) add token types for abbreviated relational
	conditions.
	* blicsyt.h (top) add structures and descriptions for NEXT
	SENTENCE and FULLSTOP.

2001-06-27  Tim Josling  <tej@melbpc.org.au>

        Snapshot 25Jun2001

	* blicc1.c: (language_string) update snapshot date to Christmas
	down under.

2001-06-26  Tim Josling  <tej@melbpc.org.au>

	* blicbei.c (get_nonunique_name): Remove dependence on result of
	sprintf
	(not allowed in GCC code).

	* blippr1.y (yy2error): Remove dependence on result of sprintf -
	not allowed in GCC code.

2001-06-25  Tim Josling  <tej@melbpc.org.au>

	* lang-specs.h: Fix up - spacing messed up by previous changes (fsf
	standards compatibility).

        Snapshot 18Jun2001
	
	* blicc1.c (language_string) update snapshot date to June 18

	* (all) Remove PARAMS macro - not needed in front ends other than
	C.

	* blippr1.y (all) Fix up caps and fullstops in comments. 
	
	
2001-06-24  Tim Josling  <tej@melbpc.org.au>

	* Updated all files to conform to the gcc spacing
	standard. Mostly.
	* blicast.c Removed KN's changes due to copyright issues.
	(check_move_compatible): Extend switch list to include the symbolic literals. 

	* blicprs.c Removed KN's changes due to copyright issues.

2001-06-17  Tim Josling  <tej@melbpc.org.au>

	* (All) where copyright owned by Tim Josling. Change Copyright to
	Free Software Foundation to reflect copyright assignment.
	* (All) reformat to FSF standards.
	* (blicprs.tpl) IF parse.
	* (blictok.def) IF parse extra tokens and pseudo-tokens.
	* (blicast.c) IF checking (in part)
	
2001-06-04  Keisuke Nishida  <kxn30@po.cwru.edu>

	* blicprs.tpl (bliss_program_ended): Use && instead of nested if's.
	(end_program): Set $$.
	(set_source): Use == instead of = in the test.

2001-06-03  Tim Josling  <tej@melbpc.org.au>

	* blicbei.c (one_deferred_init) fix upper loop bound in init

	* blir_string.c (blir_string) check if pointer within bounds (from
	Steven Ellis)

2001-06-01  Keisuke Nishida  <kxn30@po.cwru.edu>

	* .cvsignore: New file.

2001-05-01  Tim Josling  <tej@melbpc.org.au>

        Allow zero as init for non-numeric items and as sending item for
	non-numerics, always with meaning "all "0"'.
	
	* blicast.c (process_basic_value) allow zero as init for display
	item.
	(get_exp_details) new parameter zero_numeric_p to tell how to
	interpret zero. Treat as string or number as ordered.
	(all) pass new parameter to get_exp_details
	(output_move_verb) zero_numeric_p as appropriate. Treat zero as
	character string if receiving item is usage display.
	(one_deferred_init) ditto
	(output_set_verb_condition) ditto

	Make 'top' more informative when running test suite
	
	* blicc1.c - support extra parm -fnameXX..X which is ignored, to
	allow seeing file name on cmd line in top.
	
2001-04-29  Tim Josling  <tej@melbpc.org.au>

        LEVEL 88 items (condition names)

	* Various (various) removed PARAMS from function declarations
	
        * blicast.c
	(validate_procedure_division) extra code to cope with set
	condition.
	(scan_occurs_dependents) also scan 88 levels
	(process_storage) remember prior non-88 level so 88 level knows
	who is owner. Move level processing to front to get 88 levels outo
	fthe way ASAP. Call process_level_88 for 88 levels. Move value
	analysis to separate routine; process all values including ranges.
	(process_level_88) New
	(process_value) New
	(process_basic_value) New
	(explore_expression) Only warn of missing array details once.  Add
	support for condition names.
	(replace_token_by_data_item) Support conditions, better checking
	for duplicates.

	* blicbei.c
	(output_set_verb_address) renamed from output_set_verb
	(output_set_verb_condition) New
	(check_value_size) New
	(check_level88_list) New
	(check_compare_string_values) New
	(check_compare_numeric_values) New
	(output_program_code) Call new/changed SET functions. 
	(output_move) Surgery to support SET condition.
	(get_exp_details) Add support for conditions. Fix ALL processing.
	(output_group_item) Fix size calculation for BASED items.
	Add calls to check_value_size link_deferred_init check_level88_list.
	(output_deferred_init) Set first time flag to zero in generated code.

	* blicmsg.c
	(message_info_array) Change text of messages 142 174 182 185 186
	New messages 187 188 189 190 191 192 193 194

	* blicprs.tpl Add code to parse SET condition and multiple
	values. Clean up constants hierarchy.

	* blicpru.c
	(set_up_magic_tokens) Fix up support for condition names
	(get_next_name_symtab_entry) New to support better duplicate processing.

	* blicsyt.c
	(find_symtab_entry_hierarchy) Find first in list always to allow
	next to work
	(find_next_symtab_entry_hierarchy) New.

	* blicsyt.h Support for new functions in blicsyt.c.
	(bli_tree_struct_data_item) move values to value_item. Add pointer
	to level 88 details.
	(bli_tree_struct_value_item) add values, move second value to
	second struuct pointed to by second_value
	(bli_tree_cons) change poitners to void* to avoid casts
	(bli_tree_branch) change poitners to void* to avoid casts
	(bli_tree_struct_verb_set) Add fields to support condition,
	including set_type. Rename up_down to up_down_true.

	* blictok.def
	(NULLS) delete

2001-04-25  Tim Josling  <tej@melbpc.org.au>

        Snapshot 23Apr2001
	
	* blicc1.c (language_string) update snapshot date

2001-04-24  Tim Josling  <tej@melbpc.org.au>

        Move display compute etc using ZERO SPACE HIGH-VALUE LOW-VALUE and
	ALL <the above> plus ALL literal(must be non-numeric per standard).
	All initialisation is now done in procedure division.

	Rename cmp_token_struct bli_token_struct and the first
	two fields to pflag and type, move definition to blicsyt.h. Files
	affected only by this not listed below.

	Move value of data item from data_item struct to bli_tree_struct_value_item

	Speed up garbage collection
	
	* Make-lang.in build new test_blir_moveall
	* blicast.c (all) rename cmp_token_struct bli_token_struct and the first
	two fields to pflag and type, move definition to blicsyt.h.
	(validate_procedure_division) warning on use of goto
	(get_type) handle ALL literal; handle figurative constants
	(check_integral_type) handle figurative constants
	(process_storage) handle ALL literal; handle figurative constants
	(explore_expression) handle ALL literal; handle figurative constants
	(mark_parse_tree) don't redo marking GC nodes needlessly
	(resize_string) delete - not needed as prod div now dows init
	* blicbei.c (all) rename cmp_token_struct bli_token_struct and the first
	two fields to pflag and type.
	(exp_details) all_flag constant_flag new
	(output_group_item) remove init code - just chain to deferred_init queues
	(output_elementary_item) remove init code - just chain to deferred_init queues
	(output_program_code) changed calls to output_group_item and output_elementary_item
	(output_move) handle ALL and figurative constants and init of all types
	(get_exp_details) handle ALL and figurative constants
	(one_deferred_init)  handle ALL and figurative constants and init of all types
	* blicmsg.c new msgs 182,183,184,185, changed text of 126, 179 
	* blicprs.tpl support parse of figurative constants and ALL
	literal. Clean up parsing of literals.  
	* blir_moveall.c new
	* blir_moveall.h new
        * test_blir_moveall.c new 

2001-04-21  Tim Josling  <tej@melbpc.org.au>

        Further testing of pic 9(n) binary. Move of elemntary alpha to
	numeric was wrong.
	
	* blicbei.c (output_move) strip sign on move from numeric literal
	to group alphanumeric.
	(build_conversion_alpha_to_numeric) extra parameter digits in call
	* blir_convert.c extra parameter to X->numeric conversion (#digits)
	* blir_convert.h changes to x->n prototypes
	* test_blir_convert.c tests updated to use new parameter

2001-04-16  Tim Josling  <tej@melbpc.org.au>

	Add pic [s]9(n) usage binary.
	
	* blicast.c
	(check_move_compatible)
	DO_OUTPUT_MSG: meaningful name instead of constant
	DONT_OUTPUT_MSG: ditto
	(handle_numeric_error) allow caller to specify error message numbers
	(process_storage) specify msg #s
	add support for pic 9 and usage binary, record digits of number
	add test for sending numeric literal not having too many digits
	add same test for initial values
	(check_number_of_digits) new function

	* blicbei.c
	(truncate_to_digits) new function
	(output_compute_verb) correctly convert to output item type
	(output_move) handle moves involving pic 9
	(type_for_fixed_length_type) specify n bits for signed precision of n, rather than n-1

	* blicmsg.c
	(message_info_array) 143, 144 msgs changed wording
	177-181 new messages

	* blicprs.tpl
	Allow usage BINARY in parse

	* blicpru.c
	(get_name_symtab_entry) use correct token for name

	* blicsyt.c
	(create_symbol_table) put hash table in GC correctly
	(blicsyt_mark_symbol_table) add assertions and protect hash table entry from GC

	* blicsyt.h
	(bli_tree_struct_data_item) add digits to data_item struct

	* blipmsg.c
	(message_info_array) #33 change wording

	* blir_convert.c
	(CC) left align output to alphanumeric data item
	(CCU) "


	
	Bug fixes
	
	Due to the large sizes of the test programs, GC was being
	triggered and therefore tested.
	
	* blicbei.c
        (init_decl_processing) add tree root call for ridpointers GC was crashing
	ask for correct size for signed ints

	* blicc1.c
	(cmp_process_file) copy 1st file name string so it doesn't get GCed causing crash

	* blipre.c
	(process_copies) avoid crash if include directory not specified

	* blir_temp_config.h
	BLI_UINT64_CONSTANT_SUFFIX - remove
	BLI_INT64_CONSTANT_SUFFIX "

        * bliumsg.c 	 
	(build_full_sort_key) more diagnostics
	(msg_compare) compare file and line #s a word at a time character compare failed due to endianness.

	* lang-specs.h
	Allow H parm to pass to preprocessor
	
2001-04-14  Tim Josling  <tej@melbpc.org.au>

        Add exit verb. This required adding a fake fullstop verb to allow
	checking for exit being in the right spot. It is also needed to
	support 'next sentence' in IF.
	* blicast.c (validate_procedure_division) add entry for exit and fullstop
	* blicast.c (output_program_code) add entry for exit and
	fullstop. Check exit appears in the right place only
	* blicprs.tpl (yyparse) add code to save exit and fullstop
	information. Add RSN warning for exit program
	* blicsyt.h (parse_tree_descriptor_array) add table entries for exit and fullstop
	(bli_tree_type) add enum for exit verb and fullstop 
	(bli_tree_struct_verb_exit) new 
	(bli_tree_struct_verb_fullstop) new 
	* blicmsg.c (message_into_array) new message 176 'exit is misplaced'

2001-04-14  Tim Josling  <tej@melbpc.org.au>

        Add continue verb.
	* blicast.c (validate_procedure_division) add entry for continue
	* blicast.c (output_program_code) add entry for continue
	* blicprs.tpl (yyparse) add code to save continue information
	* blicsyt.h (parse_tree_descriptor_array) add table entries for continue
	(bli_tree_type) add enum for continue verb
	(bli_tree_struct_verb_continue) new 

2001-04-14  Tim Josling  <tej@melbpc.org.au>

        I will strive to make better ChangeLog entries from now on by
	keeping a base.code I can do a diff with.
	Test init of arrays and groups in local-storage.
	Optimise move for case where lengths are the same - omit cll to
	memset to do fill.

	* blicbei.c (output_move) only output call to memset to space fill
	if needed.

2001-04-13  Tim Josling  <tej@melbpc.org.au>

        Allow init of arrays and group items.
	
	* blicbei.c bits and pieces - generate code
	* blicast.c bits and pieces - validate

2001-04-12  Tim Josling  <tej@melbpc.org.au>

        Test support for MOVE CORRESPONDING. 
	
	Add and test support for COMPUTE exponentiation.
	* blicbei.c bits and pieces - generate code
	* blicast.c bits and pieces - validate
	* blicprs.tpl bits and pieces - parse
	* blir_exponentiation.c new
	* blir_exponentiation.h new

2001-04-12  Tim Josling  <tej@melbpc.org.au>

	Add support for MOVE. Move corresponding not yet tested.
	Fix bug in DISPLAY of table entries which are group items.

	* blicbei.c (output_move_verb) new
	(output_move) new
	(build_conversion_alpha_to_numeric) new
	(build_conversion_numeric_to_alpha) new
	(get_exp_details) new replaces get_type_length_address get_type_basic etc.
	(output_group_item) use correct type for length with occurs
	* blicast.c (match_corresponding) new
	(check_move_compatible) new
	(validate_procedure_division) add code for move
	* blicprs.tpl - parse move and gather data

2001-04-02 Tim Josling  <tej@melbpc.org.au>

	GCC Snapshot 2001/04/02

	blicc1.c Update version string

2001-04-01  Tim Josling  <tej@melbpc.org.au>

        Header file for UNSTRING to be written by Steven Ellis.
	
	* blir_unstring.h (new file)

        COMPUTE (compiler subset; no overflow, rounding)
	
	* blicprs.tpl enable compute productions
	* blicast.c add code for compute.
	* blicbei.c add code generation for compute
	(get_uint32_value) add shift parameter as only size constants need
	the 3 bit shift.

2001-03-31  Tim Josling  <tej@melbpc.org.au>

        GO TO (except alterable goto) plus tests. 
	Fix misc bugs. 
	
	* blicprs.tpl enable go to productions
	* blicast.c add code for goto.
	(check_integral_type) new function to check expression is numeric
	and integral.
	* blicbei.c add code generation for goto
	(output_goto_verb) new function.

	Reduce code bloat for displays

	* blir_display.c (blir_display_nl) new function
	* blir_display.h (blir_display_nl) new function prototype
	* blicbei.c (output_display_verb) use new function

	* blicbei.c (output_set_verb): Save the from expression to avoid
	its being evaluated more than once.

2001-03-28  Tim Josling  <tej@melbpc.org.au>

	Convert the inspect code to match the coding standards. Note the
	tests are not yet complete. They were placed in the test suite but
	all fail at present for various reasons.
	
	* blir_inspect.h
	* blir_inspect_tallying.c
	* blir_inspect_replacing.c
	* blir_inspect_converting.c
	* blir_inspect_index.c
	* blir_inspect_substring.c
	* test_blir_inspect_tallying.c
	* test_blir_inspect_replacing.c
	* test_blir_inspect_converting.c
	Renamed from old file names and convert to new coding standards
	(BLI_* types), add some more test output, avoid overwriting
	constant strings.
	
	Regularize the generation of code from integer expressions.
	* blicbei.c (all) wholesale changes.
	
2001-03-26  Tim Josling  <tej@melbpc.org.au>

	Support for duplicate (ambiguous) data items as required by the
	standard.

	Compiler subset of data division is now complete. 

	* blicbei.c various bits of logic, renamed get_filler_name to
	get_nonunique_name
	
	* blicast.c various bits of logic

2001-03-25  Tim Josling  <tej@melbpc.org.au>

	Support for filler. 

	* blicbei.c various bits of logic
	* blicast.c  ditto
	* blicsyt.c allow entry in symbol table for filler

2001-03-25  Tim Josling  <tej@melbpc.org.au>

	GCC Snapshot 2001/03/20 (Zack cleans up.)  

	* blicbei.c 

	(output_elementary_data_item) move pushdecl to after the
	layout_decl call.

	(output_group_item) ditto
	
2001-03-24  Tim Josling  <tej@melbpc.org.au>

	GCC Snapshot 2001/03/20 (Zack cleans up.)
	* bliumsc.c remove references to deleted if_gcable routine
	* bliumem.c remove references to deleted if_gcable routine
	* bliumem.h remove references to deleted if_gcable routine
	
2001-03-23    Daniel Ardison  <dardinson@ardison.com>

	* Changed licence to LGPL on the library routines for inspect.

2001-03-22  Tim Josling  <tej@melbpc.org.au>

	Bug fixes to pointers code. 

	* blicast.c numerous updates
	* blicbei.c numerous updates
	* blicsyt.h numerous updates

	Add procedure line numbers to debugging output. 

	* blicbei.c (output_program_code) emit_line_note call.

2001-03-22  Daniel Ardison  <dardinson@ardison.com>

        Inspect tallying. 
	
	* blir_instal.c
	* test_blir_inspect.c
	* blir_inspect.h (updated)

2001-03-04  Tim Josling  <tej@melbpc.org.au>

	Added pointers (still incomplete). Lots of changes, too many to
	document every one.
		
	* blicbei.c
	* blicast.c
	* blicc1.c
	* blicprs.tpl

	String function completed (Steven Ellis)

	* blir_string.c
	* test_blir_string.c

2001-02-11  Tim Josling  <tej@melbpc.org.au>

	Added occurs and occurs depending on. Lots of changes, too many to
	document every one.
		
	* blicbei.c
	* blicast.c
	* blicc1.c
	* blicprs.tpl

2001-01-26  Tim Josling  <tej@melbpc.org.au>

	* blicbei.c (various) Remove excessive garbage collection anchors.

	* blicbei.c (various) Make pic x(n) a struct containing an array
	of chars instead of just being an array.

	* blicast.c (various) Make pic x(n) a struct containing an array
	of chars instead of just being an array.

2001-01-21  Ted Seward c/- <tej@melbpc.org.au>

	Sort code
	
	* test_blir_sort.c new
	blir_sort.c new
	blir_sort.h new
	blir_sort_io.c new
	blir_sort_io.h new

	
2001-01-21  Tim Josling  <tej@melbpc.org.au>

	* blir_editMove.c 
	(overpunch) replace by blir_overpunch.c routine
	(set_overpunch) ditto
	(getDisplayOverpunch) replace calls to use blir_overpunch.c routine
	(blir_emUnedit) ditto
	(putDisplay) ditto
	
2001-01-21  Fergus Henderson (fjh@cs.mu.oz.au>

	Debugging fixes - there are still debugging bugs left for sure
	though.

	* blicbei.c (build_function) set DECL_ARGUMENTS(fndecl) to getdecls();
	(init_decl_processing) extra garbage collection roots. 
	push the decl of string_type_node.
	(mark_addressable) replace with version from c-typeck.c.

2001-01-21  Curt Timmerman (curt@curttimmerman.net)

	Upper case intrinsic from Curt Timmerman (not yet in Makefile)

	* blir_intrinsic_lower_case.c new
	* blir_intrinsic_lower_case.h new
	* test_blir_intrinsic_lower_case.c new

2001-01-21  Daniel Ardison (dardison@ardison.com)

	Inspect verb routines (not yet in Makefile)

	* blir_inscon.c new
	* blir_insind.c new
	* blir_inspect.h new
	* blir_insrep.c new
	* blir_insssg.c new
	* test_blir_replace.c new
	* test_convert.c new
	* test_replace.c new

2001-01-20  Tim Josling  <tej@melbpc.org.au>

	GCC Snapshot 2001/01/15
	* blicc1.c
	(lang_hooks) - new global variable with language routine addresses
	(bli_init) new fn replaces init_lex
	(bli_finish) new fn replaces lang_finish_parse
	(bli_init_options) new fn replaces lang_init_options
	(bli_decode_option) new fn replaces lang_decode_option
	(bli_post_options) new fn.

	* blicbei.c
	(output_program_prolog) make_function_rtl ->make_decl_rtl
	(output_display_verb) ditto
	(output_stop_verb) ditto
	(call_void_function_no_args) ditto
	(builtin_function) ditto

2001-01-02  Tim Josling  <tej@melbpc.org.au>

	* blicast.c (process_storage): fix inverted stack for name
	hierarchy to fix array overflow but causing storage overlays.

2001-01-01  Tim Josling  <tej@melbpc.org.au>

	* blicbei.c (all) major changes for redefines
	* blicast.c (all) major changes for redefines
	* blicsyt.h (all) new flags to support redefines
	* blicsyt.c (all) new routine to allow overwrite of object pointed to by entry.

2000-12-30  Tim Josling  <tej@melbpc.org.au>

	* blipre.c (output_resulting_file): Change 'gap' to signed to
	prevent loop.

2000-12-25  Tim Josling  <tej@melbpc.org.au>

	* blicbei.c (init_decl_processing): revised spec1 macro to prevent
	crash when using -g.

	(output_group_item): fiddling around to stop crash with structures
	and -g.
	(output_nested_group_item): ditto

2000-12-24  Tim Josling  <tej@melbpc.org.au>

	Structures now supported. 
	* blicbei.c (all) major changes to support structures
	* blicast.c (all) major changes to support structures
	* blicsyt.h (bli_tree_struct_data_item) extra fields to save trees
	used during code building

2000-12-20  Tim Josling  <tej@melbpc.org.au>

	* Supported snapshot to 2000/12/18
	
	* Remove float_long_long and tests from blir_display.c
	test_blir_display.c

	* Changed all %L to %ll to eliminate warnings.

2000-12-19  Tim Josling  <tej@melbpc.org.au>

	* Changed licence on test_blir_* programs to GPL from LGPL with
	Ted Seward's permission.

2000-12-16  tim  <tej@melbpc.org.au>

	Support for as "name" in program-id function-id. 
	* blicbei.c (output_program_prolog) Add support for as "name" in
	program-id. Only output first program as 'main' when -fmain
	specified. 
	(blic_bei) skip module if 'is prototype' 

	* blicsty.h (bli_tree_struct_program_or_function_id) as_value_list
	-> as_value
	(parse_tree_descriptor_array) as_value_list -> as_value

	* blicprs.tpl (program_id_para) add fullstop to function-id
	paragraph syntax.  as_value_list -> as_value.

	
	
2000-12-15  Tim Josling  <tej@melbpc.org.au>

        Simplify concatenated strings logic, now all in one place.
        * blicprs.tpl (concatenated_strings) move calls to cleanup_strings here 
        * blicast.c (validate_parse_tree) remove calls to cleanup_strings
        * blicast.c (resize_string) new function
        * blicast.c (validate_parse_tree) call resize_string
	
	* blicast.c (cleanup_strings) unlink remove all but first
	token. first token now contains the concatenated contents of all
	the concatenated tokens.

	* blicast.c (validate_parse_tree) loop to handle all programs in
	input file

2000-12-14  Tim Josling  <tej@melbpc.org.au>

	Concatenated strings and hex strings
	* blicast.c (cleanup_strings) new functions
	* blicast.c (cleanup_string) new functions
	* blicast.c (validate_parse_tree) use new functions
	* bliprs.tpl (concatenated_string) enable  
	* bliprs.tpl (concatenated_string_2) make depend on itself not concatenated_string
	Bug fixes and cleanups
	* blisyt.h (bli_tree_struct_data_item) remove fixed_id not used
	* blicmsg.c (message_info_array) change numbers to not clash with
	blipmsg.c, cleanup some msgs
	* blipmsg.c (message_info_array) cleanup some msgs
	* bliplex.l (generic_string) allow hex strings and warn depending
	on options
	
2000-12-13  Tim Josling  <tej@melbpc.org.au>

        * Makefile.in safe-ctype.o linked into blipre
	* blicbei.c ctype.h -> safe-ctype.h toupper tolower isupper
	islower -> CAPS 
	* blicast.c "
	* blipre.c "
	* blipre1.c "
	* blippru.c "
	* bliclec.l "

2000-12-12  Tim Josling  <tej@melbpc.org.au>

	Add 64 bit integers signed and unsigned

	* blicbei.c (output_data_item)
	(output_display_verb)
	(type_for_fixed_length_type)
	(length_of_fixed_length_type) support 64 bit integers

	* blicast.c (validate_parse_tree) support 64 bit integers 
	
	(get_string_unsigned_long_long_value)
	(get_string_signed_long_long_value)
	(get_string_nonsigned_long_long_value) new to support 64 bit
	integers

	(get_string_signed_value) fix values for negative case

	* Make-lang.in (check-bliss-fix) ensure compiled program output is
	copied too.

2000-12-09  Tim Josling  <tej@melbpc.org.au>

	* all: get "hello world" working, get display and init of
	binary-char binary-short binary-long working.

	* Make-lang.in: add libbli4gcc.a library, turn off verbose output
	from bison,  fix up word count, 

	* blicast.c: 
	(get_token_int_value) remove
	(get_string_int_value) remove
	(get_token_nonsigned_value) new
	(get_string_nonsigned_value) new
	(get_string_unsigned_value) new
	(get_string_signed_value) new
	(numeric_literal_error) new enumeration
	(handle_numeric_error) new
	(blic_ast) add checking of valid parse tree descriptors
	(validate_parse_tree) use new functions
	above, record sign of data item, add support for numeric
	data types, check certain numbers have no sign or inly a +ve
	sign. 
	(dump_parse_tree) dump signed atribute

	* blicbei.c 
	(output_display_verb) add support for numerics, fix order of
	blir_display parameters, replace magic numbers with defined value
	and enumerations. Use new functions below.
	(type_for_fixed_length) new
	(length_of_fixed_length_type) new
	(output_data_item) use new functions above, add support for
	numeric types.

	* blicc1
	(global_variables) fix default values for bliss column offsets
	(lang_init_options) remove init of token_flag_mask, make init
	static.
	(init_parse) check for no filename given
	(cmp_process_file) avoid duplicate version output if -V --help,
	only generate code if no errors.

	* bliclex.l
	(yylex) allow +- sign at start of integer literal

	* blicmsg.c
	(msg_info_array) reformat and add msgs 29 and 30, fix init of
	display flag.
	(bli_get_token_details) handle no file scenario 

	* blicprs.tpl
	(yyparse) all gc items into a common struct for easy re-init. fix
	up list reversing, add collection of parse tree for numeric data
	items, add parsing for function prototypes, allow concatanated
	strings in parse (not yet supported in blicast.c).

	* blicsyt.c
	(global_variables) add check_index to parse_tree_descriptor to
	validate descriptor table, fix various errors in parse tree
	descriptors, add tree_struct_item_list as generic link man for
	lists eg of concatenated strings, add repository structures, add
	signed attribute in data items, rename int_value to signed_value 

	* blictok.def
	(global_variables) add new tokens for binary-long-double and binary-long-long-double 

	* blicppr1.y
	(blippr1) handle empty or missing input file

	* blipre.c
	(global_variables) default changed to sequence numbers included at
	start of line
	(usage) clean up help.
	(blipre_options) use EXIT_SUCCESS EXIT FAILURE

	* blir_editMove.c
	(all) make internal functions static
	(mergeFlags) allow fieldType to use whole work, do not mask out,
	add assertions for debugging.

	* blir_stop.c
	(blir_error_drop_off_end) new
	(all) replace DISPLAY by STOP in gating #if

	* blir_temp_config.h
	(BITSPERBYTE) add

	* bliumsg.c
	(errorcount) name changed from error_count and make externally accessible
	(warningcount) name changed from warning_count and make externally accessible

	* lang_options.h
	(all) redo options from scratch

	* lang_specs.h
	(all) remove -dumpbase, add --help

2000-12-02  Tim Josling  <tej@melbpc.org.au>

	* blicc1.c cleaning up options to work with gcc
	* blipre.c cleaning up options to work with gcc

2000-11-30  Tim Josling  <tej@melbpc.org.au>

	* blicc1.c: error_count => toplev.c errorcount
	* bliumsg.c: error_count => toplev.c errorcount
	* blipre.c: error_count => toplev.c errorcount

	* blicmsg.c (bli_get_token_details): handle case where file has no
	tokens

2000-11-25  Tim Josling  <tej@melbpc.org.au>

	Split out stop run/literal processing into new file
	* blir_stop.c new
	* blir_stop.h new
	* blir_display.c remove stop support
	* blir_display.h remove stop support

	* test_blir_display.c (main) fix length of long double

2000-11-22  Tim Josling  <tej@melbpc.org.au>

	Support for gcc snapshots current to 21 November 2000 but no
	changes needed since 30 October. Currently need to switch off
	build of libc++-v3 manually by editing the Makefile.in at the top
	level, if you do not build C++.

	* test_blir_display.c (main) fix length of long double

2000-11-18  Tim Josling  <tej@melbpc.org.au>

	* blir_temp_config.h change blir_type to an enumeration; rename
	FLOAT32/64/128 to SHORT/DOUBLE/LONG_DOUBLE.
	* test_blir_editMove.c change float names as above
	* test_blir_display.c change float names as above
	* blir_editMove.c change float names as above
	* blir_display.c change float names as above

2000-11-11  Tim Josling  <tej@melbpc.org.au>

	* test_blir_stop.c - new file to test stop run/literal
	* test_blir_display.c - removed test of stop
	* Make-lang.in - build new file test_blir_stop; fix dependencies on check-bliss
	'string' function
	* blir_string.c - new file from Steven Ellis
	* blir_string.h - new file 
	* test_blir_string.h - new file 

2000-11-04  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20001030 - move makes into main make - thanks Zack
	* *.*- changes to sign of variables, casting, etc to cut warnings
	to 4 (excluding the runtime test drivers)
	* Makefile.in - remove
	* make-lang.in - update to put all makes inline, change main compiler name to bli1
	* lang-specs.h - change main compiler name to bli1
	* config-lang.in - tell it not to create the subdirectory makefile

2000-10-25  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20001023
	bliumsc.c: (ggc_p) add - had been removed from core compiler ggc.h.

2000-10-04  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20001002
	blicbei.c: (mark_false_label_stack) remove

2000-09-30  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000925

2000-09-23  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000918
	* blicbei.c (builtin_function) New function.

2000-09-16  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000912
	* blicbei.c - remove references to RID_ITERATOR

2000-09-09  Tim Josling <tej@melbpc.org.au>

	* Fixing up texinfo files 

	tree.texi: remove and incorporate into bliss.texi; trouble getting
	links to work otherwise

	Refactor code generation

	* blibei.c (blic_bei) main logic into separate function output_program_code
	(output_program_code) new function
	(output_stop_verb) new function
	(output_display_verb) new function
	(output_program_prolog) new function
	(output_program_epilog) new function
	(call_void_function_no_args) new function
	(get_fixed_name) new function
	(get_fixed_identifier) new function
	(output_data_item) new function
	
2000-08-30  tim  <tej@melbpc.org.au>

	* All files - Upgrade comments to FSF coding standards
	guidelines.

2000-08-27  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000821
	- no changes other than to the snapshot literal in blicc1.c

	* test_blir_editMove.c (doTestValue) 
	* blir_editMove.c (mergeTypes) 

	Remove redundant OR as types are not bit masks any more.
	
	* blir_temp_config.h 
	* test_blir_bin128_debug.c 
	* blir_editMove.c
	* test_blir_editMove.c

	- renamed floating point fields to more generic names
	(typeFLOATSHORT/...DOUBLE/...LONGDOUBLE)

2000-08-20  Tim Josling  <tej@melbpc.org.au>

	Cleaning up parser & fixing RSN macro 
	* Make-lang.in - SUBDIR_FLAGS_TO_PASS -> LANG_*
	* blicprs.tpl - wholesale restructure of code to build parse tree
	via $$ flows up the parse tree rather than static variables.
	* blir_* updates to all Ted Sewards's routines. Included the
	editMove routines for the first time.

2000-08-15  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000814
	No changes other than to GCC snapshot literal

2000-08-14  Tim Josling  <tej@melbpc.org.au>

	* blipre.c (ggc_del_root) new dummy function

2000-08-13  Tim Josling  <tej@melbpc.org.au>

	Ignore debug line tokens if debugging not on.
	* bliclex.l, blicpru.c (set_up_magic_tokens)
	add logic to do this
	* blicprs.tpl (parse_init) warning if parser trace req'd but not compiled in.
	* blicmsg.c (bli_message_info struct) message_ID 22 for parser trace msg

	Improve parser error messages - remove 'error or' and replace '$'
	by 'end of file'.
	* blipmsc.c (bliumsc_storage_always_used_maybe) new function
	* blipmsc.h (bliumsc_storage_always_used_maybe) new function
	* bliumsg.c (record_msg) Ensure msg text is not GCed before address
	saved in message array.
	* blicprs.tpl: (bli_error) extra logic to patch up messages for this

2000-08-12  Tim Josling  <tej@melbpc.org.au>

        True line numbers into error messages and debug
	* blipre.c: (process_file) add line numbers to trace of nested copy files
	* blipre.c bliclex.l bliumsg.c file_names_called renamed to file_names_copied
	* bliclex.l: (handle_lineno_directive) new function
	* blicbei.c: (blic_bei) use line numbers and file names from tokens instead of dummy values.

2000-08-10  Tim Josling  <tej@melbpc.org.au>

	GCC Weekly snapshot 20000807
	* Makefile.in 
	* Make-lang.in:
	Changes to use new libbackend.a instead of stamp-*

2000-08-08  Tim Josling  <tej@melbpc.org.au>

	* blicprs.tpl, blictok.def: added binary-long-double (for 128 bit arithmetic)
	* bliclex.l: clean up error messages 

2000-08-01  Tim Josling  <tej@melbpc.org.au>

	* blir_* files added for decimal to binary conversion and 128 bit
	binary processing. From Ted Seward.

2000-07-31  Tim Josling  <tej@melbpc.org.au>

	Updates to support changes to gcc since last build.  

	* blicc1.c: various prototypes to use const paramaters 

	* blicbei.c: various prototypes to use const paramaters; ridpointer
	now allocated via xcalloc. Added dummy routine lang_get_alias_set.

	* bliumem.c (bliumem_alloc) rename ggc_alloc_object to ggc_alloc
	* blipre.c (ggc_alloc_obj dummy routine) rename to ggc_alloc

2000-05-13  Tim Josling  <tej@melbpc.org.au>

	 "Continue with change to garbage collection."
	 "Intern strings and names."

	 * bliclex.l (intern_string*) New functions.
	 (update_lineno_charno) Use new functions
	 (initial lexical analysis)

2000-05-11  Tim Josling  <tej@melbpc.org.au>

	"Build failure fix - ATTRIBUTE_UNUSED undefined"

	* All. Convert all ansidecl.h to ansidecl.h. I think this is causing
	some build failures.

	* All. Convert to garbage collection on all memory allocation not
	just compiler back end.

2000-05-08  Tim Josling  <tej@melbpc.org.au>

	"error messages improved"
	* bliumsg.c (output_summary) Only output error and warning count
	if one is > 0. Output trailing \n if counts were not output and
	some messages were output (eg if only FYIs were output).
	(output_msg) Output copy hierarchy before group of messages for
	same file rather than in each message. 

2000-05-07  Tim Josling  <tej@melbpc.org.au>

	"Make garbage collection work"
	* blicbei.c (blic_bei) allocate filename using garbage collection
	(init_decl_processing) set decl_name in standard types

2000-05-06  Tim Josling  <tej@melbpc.org.au>

	"Turn garbage collection on"
	* blicbei.c (lang_mark_tree) return instead of abort
	(lang_mark_false_label_stack) return instead of abort
	(ggc_p) set variable to 1 to signify garbage collection is on
	(blic_bei) remove obstack calls
	set current function as soon as it is allocated
	(type_for_size) remove obstack calls
	(pushdecl) leave context 0 for top level function

2000-04-26  Tim Josling  <tej@melbpc.org.au>

	* blic* Use new memory management functions, new messaging
	functions and new misc functions.

2000-04-24  Tim Josling  <tej@melbpc.org.au>

	Cleaning up memory management and message handling
	* bliumsg.c New file for message management
	* bliumsg.h New file for message management
	* blicmsg.c New file for message management
	* blipmsg.c New file for message management
	* bliumsc.c New file for miscellaneous functions
	* bliumsc.h New file for miscellaneous functions
	* bliumem.c New file for memory management
	* bliumem.h New file for memory management
	* blip* Use new functions
	* bliss.texi tree.texi New files for documentation
	* RAVE, FILES, AUTHORS etc subsumed into bliss.texi, only README
	remains
	* Caffeine withdrawal complete, productive again. There is life
	after coffee.

2000-04-15  Tim Josling  <tej@melbpc.org.au>
	* blicbei.c (blic_bei) Complete debug of code generation for a microscopic
	subset of bliss.
	* blicsyt.h (blic_ast) ditto
	* blicast.c (changes to the  enumerations to be more distinctive) 

2000-04-09  Tim Josling  <tej@melbpc.org.au>
	* Submitted waiver form to my employer for FSF copyright.
	* Update RAVE and TASKS

2000-04-08  Tim Josling  <tej@melbpc.org.au>
        * blicbei.c: (blic_bei) Complete writing code generation for tiny
	subset of bliss.
	* Add pushdecl for function definitions
        * blicprs.tpl: (reverse_list) fix bug reversing lists
	* Coffee withdrawal (headache phase) complete

2000-03-25  Tim Josling  <tej@melbpc.org.au>
        * (FILES) add list of files and their functions.
	* (RAVE) update on merits of BLISS.

2000-03-16  Tim Josling  <tej@melbpc.org.au>
	* Gave up coffee - huge productivity hit

2000-03-06  Tim Josling  <tej@melbpc.org.au>

	* (blif2v.c) change support for \x escape sequences in
	strings and replace by bliss 2000 standard x"hh..." strings.
	* (blipre.c) remove support for =x escape sequences. x"hh..." not
	supported at this stage in preprocessor.
	
2000-03-05  Tim Josling  <tej@melbpc.org.au>

	* (all files) conversion to run under toplev.c as part of GCC
	following success in getting exa and toy running as part of gcc
	current snapshot.
	
2000-02-02  Tim Josling  <tej@melbpc.org.au>

	* (all files)
	- completed conversion to GNU standards 
	- expect for portability
	- Added 140 tests as make check-bliss
	- still to do: blicc1

2000-01-17  Tim Josling  <tej@melbpc.org.au>

	* (all files) 
	- Convert to GNU coding standards
	- Convert to GCC option standards
	- Move to gcc/bliss directory
	- Integrate into GCC makefiles

2000-01-08  Tim Josling  <tej@melbpc.org.au>

	* (ChangeLog) make format standard from now on
	* (working on GCC integration)

1999 December 28

	- numerous fixes to lex and grammar for main compiler

	- update version numbers: 0.2.3 for parser; 1.2.3 for preprocessor

1999 December 27

	- renamed tokens and productions to more user-friendly form

	- added comments on status of main compiler (ie it doesn't work, not tested)

1999 December 24 Tim Josling

	- add local-storage (from cd1.7)

	- update version numbers: 0.2.0 for parser; 1.2.2 for preprocessor

	- remove grammar conflicts from preprocessor

	- working on integration with GCC back end (no code to show so far)

1999 December 22 Tim Josling

	- completed nucleus grammar and hacks to allow bison to support it.

	- fix bug in preprocessor, spurious parse errors on functions that have no arguments.


1999 December 17 Tim Josling

	- fix preprocessor to ignore whitespace in replace/replacing comparisons

1999 December 5 Tim Josling

	- added support for function calls.

1999 December 4 Tim Josling

	- improvements suggested by Bob Rayhawk to remove conflicts - now 0 conflicts
	- fixes to my implementation of the improvements suggested by Bob
	- prevent nested evaluate/search
	- move to http://timjosling.homepage.com


1999 December 1 Tim Josling

	- fixing up bligolex.l and bligocmp.c to trace lexical analysis and stop before parse

1999 November 30 Tim Josling

	- add function prototype support and end-function

	- better error recovery for if/else

	- fixes for nested conditional statements (size error binds to
	nearest feasible verb which is a 'non-standard' warning)

1999 November 29 Tim Josling

	- changes to preprocessor to output full copy hierarchy in #line directives

	- added 'usage program-pointer' and 'address [of] program aaa'

	- only output #(line) directive if not consecutive lines 

	- add some support for functions in the grammar

	- now over 1,000 grammar rules, and over 1,600 states

1999 November 28 Tim Josling

	- added error productions for error recovery, to allow max errors to be found per compile

1999 November 27 Tim Josling

	- completed nucleus level 2 grammar

	- additional support for call and being called (from IPC module) 

	- additional support for pointers (from bliss 4 draft)

1999 November 23 Tim Josling

	- conditional expression excluding abbreviated relational conditions

	- conditional expression including abbreviated relational conditions

1999 November 22 Tim Josling

	- start of grammar for procedure division up to add verb

	- found hack for the nested statements and optional end-verb problem

	- grammar up to divide verb

	- also added hack for scan for 'giving'.

	- fixes for various bugs and changes to flag all extensions in the
	preprocessor.

1999 November 19 Tim Josling

	- fix error using yytext after value obsolete (bligolex.l only,
	preprocessor OK)

	- switch to bison for bligocmp main compiler

	- grammar for identification division, environment division, data
	division for nucleus level 2

1999 November 15 Tim Josling

	- fix error in comment-entry code (c-e should not actually be
	terminated by period space)

	- fixes to tests

1999 November 13 Tim Josling
	- change name of memory management modules from x* to tj_* due to
	name clash with gcc routines.

	- fix some error messages

	- use table and mask for determining which reserved words to
	identify in lexical analysis of main compiler

	- fixes to lexer for numbers and names, redo reserved word coding
	
1999 November 11 Tim Josling
	- remove feature that allowed arbitrary expressions in array
	references within identifiers within from or to in COPY
	REPLACING. Redundant as you can use pseudo text to replace
	anything with anything and it was difficult to flag the extension.

	- fix bug that meant that if the last copy verb or any replace
	verb had errors then all replace verbs subsequently processed were
	silently ignored.

	- changes for glibc snprintf return value changed in new version

1999 September 12 Tim Josling
	- clean up in preparation for upload to the Internet (Geocities)

1999 August 21 Tim Josling
	- intial work on full compiler parsing using btyacc

1999 August 19 Tim Josling
	- R-margin feature

1999 August 08 Tim Josling
	- tests completed
	- performance test added
	- fix bugs in make deps
	- clean up doco
	- add 'CPY' to name of included file if included from BLISS word
	- created ASCII/EBCDIC conversion tables based on MS DOS encyclopaedia
	and OS/2 Comms Manager manual
	- ready to post on geocities

1999 July 25 Tim Josling
	- test no-seq option
	- test lineno option
	- allow comma in numeric literal
	- fix extra space at end of file bug
	- testing

1999 July 18 Tim Josling
	- testing of bligpre complete except for error scenarios (tests 1-14)
	- testing very successful - found many bugs, so many bug fixes
	- wrote SPECS
	- added rubberstamp make to auto-setup test once I have checked it
	- updates to RAVE - more balanced
	- updates to README - emphasise possibility program may fail

1999 June 19 Tim Josling
	Added options in preparation for testing
	- suppress messages for various levels of severity
	- suppress messages by number
	- set failure on warning instead of failure on error
	- output-chad-linenos option with file specified (option
	recognized but not implemented)

1999 June 16 Tim Josling
	bligppru.c: - repasting tokens after replace - ensure period
	spaces is recognised correctly in repasting - relex the tokens
	after replace to ensure the text is split up correctly into
	tokens.

1999 June 13 Tim Josling
	bligppru.c:
	fixing replace code
	- debug attribute
	- line placement
	bligpre.c:
	fixing output code
	- output into a character array
	- #line option
	- shifting tokens right as needed etc

1999 June 07 Tim Josling
	Review of bliss standard:
	- from/to in copy can be numeric literal
	- remove copy/replace verbs including erroneous ones
	- remove replaced text
	- fix numeric literal support

1999 May 10 Tim Josling
	 bligpre[1]?.c:
	 Debug parser for copy.
	 Refactored to remove bligpre1.c program.
	 Validation of bliss words, full stops.
	 Check identifier is correct ( ref mod follows the array refs ).
	 Refactor makefile to build dependencies semi-auto.
	 Restructure bligpre to more modular structure.
	 Put all file details into a structure in prep for recursive copies.
         Preserve information for tokens and lines that originated across
	 two or more lines.

1999 Apr 25 Tim Josling
	 bligppr1.y
	 build parser for replace verb

1999 Apr 24 Tim Josling
	bligutil: 
	handle empty input file
	bligppr1.y:
	build parser for copy verb 
	
1999 Apr 10 Tim Josling
	Option handling all using getopt_long
	All code includes -v --version -h --help options
	All code now has unit tests in makefile
	
1999 Apr 06-09 Tim Josling
	Restructure in line with extreme programming principles

1999 Apr 05 Tim Josling
	bligpre: 
	handle premature end of comment-entry
	avoid moves of new record area

1999 Mar-Apr Tim Josling
	a2e/e2a/d2u/u2d/f2v/utab utilities all written
	Parts of preprocessor written
