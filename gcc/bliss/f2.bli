module f1 (main=r)=
begin

structure myvector[i; n, unit, ext] =
[n*unit]
(myvector+i*unit)<0,8*unit>;

!structure
!mybitvector[i; n, unit=4, ext=0] =
![n*unit]
!(mybitvector+i^(-5))<i and 31,1>;

!structure mydda[i;n]=
![(n+1)/2]
!mydda<4*i,4>;

!structure
!block_byte[o,p,s,e; bs] =
![bs]
!(block_byte + o)<p,s>;

own def : myvector[15,4];
own def2 : myvector[15,4];
!structure
!vector[i; n, unit, ext] =
!![n*unit] 
![
!begin
!own a;
!n*unit;
!a=n*unit;
!a=3*n;
!n*unit;
!end
!]
!begin
!own a;
!a=511*i;
!a=127; 
!end;
!!(i*unit)<0,8*unit>;
!!begin
!!own a;
!!n*unit;
!!a=n*unit;
!!a=3*n;
!!n*unit;
!!a=3;
!!end ;
!!(vector + i*unit)<0,8*unit>;
!own vec : vector[10];
routine dummy2=
begin
!own def : myvector[5,4];
own data,data2;
external routine undecl;
data=1;
data2=.data<3,3>;
!20000<8,8>=64;
!20008=77;
undecl(def,.def);
undecl(data,.data);
data+0=15;
!20000<7,49>=32<3,3>;
(data+1)=16;
(data+1)<3,3>=3;
def[3]=77;
(1+data+1)<3,3>=16;
data+2=17;
undecl(data,.data);
undecl(data+1,.(data+1));
undecl(data+2,.(data+2));
!20001+7=77;
def=129;
undecl(129,.def);
def<3,3>=7;
undecl(129,.def);
!def[3]=77;
data=.def<0,8>;
data=.def[0];
undecl(data,.data);
end;
own dd;
routine dummy=
begin
!external routine pppp;
own def;
own xyz;
own abc;
def=1;
xyz=1;
abc=3;
!pppp(2,abc);
!xyz+1=2;
!136000=3;
!.136000=3;
end;

routine zzzz=
begin
!own mybyte: byte;
!own myword: word;
external routine undecl;
!mybyte=4;
!myword=3333;
!mybyte=.myword;
!undecl(.mybyte,.myword);
undecl(65535,1);
end;

routine pppp(par1, par2)=
begin
external routine undecl;
own myown;
undecl(64,96);
undecl(par1, par2);
undecl(.par1,.par2+.par1);
!par2=3;
myown=par1<16,8>;
undecl(par1, .myown);
undecl(64,97+1);
end;

!routine q=3;
routine r=
begin
external routine undecl;
own a,b,c,d;
undecl(a,b);
undecl(c,d);
undecl(4,0);

if b then dd=4;
undecl(4,1);
if b then dd=4;
undecl(4,2);
end;
routine s=
begin
external routine undecl;
external routine amalloc;
external routine zzzz;
own d,c;
zzzz();
!pppp(1,2);
!pppp(255,2);
undecl(dd,44);
undecl(c,.c);
c=amalloc();
undecl(c,.c);
undecl(d,.d);
d=2;
undecl(d,.d);
r();
d=3;
r();
undecl(d);
undecl(2,3);
undecl2();
end;
routine t=
begin
own e,f;
f=3;
while .f do begin
r();
undecl(9,f);
f=.f-1;
end;
!return;
e=2;
dummy2();
end;
end
eludom

