module f1 (main=r)=
begin
own dd;
structure
vector[i; n, unit=4, ext=0] =
[n*unit]
(vector + i*unit)<0,8*unit,ext>;
routine dummy=
begin
own def;
own xyz;
own abc;
def=1;
xyz=1;
abc=3;
xyz+1=2;
136000=3;
!.136000=3;
end;

routine pppp(par1, par2)=
begin
external routine undecl;
own myown;
undecl(64,96);
undecl(par1, par2);
undecl(.par1,.par2);
!par2=3;
myown=par1<16,8>;
undecl(par1, .myown);
undecl(64,97);
end;

routine q=3;
routine r=
begin
external routine undecl;
own a,b,c,d;
undecl(a,b);
undecl(c,d);
undecl(4,0);

if b then dd=4;
undecl(4,1);
if b then dd=4;
undecl(4,2);
end;
routine s=
begin
external routine undecl;
external routine amalloc;
own d,c;
pppp(1,2);
pppp(255,2);
undecl(dd,44);
undecl(c,.c);
c=amalloc();
undecl(c,.c);
undecl(d,.d);
d=2;
undecl(d,.d);
r();
d=3;
r();
undecl(d);
undecl(2,3);
undecl2();
end;
routine t=
begin
own e,f;
f=3;
while .f do begin
r();
undecl(9,f);
f=.f-1;
end;
return;
e=2;
end;
end
eludom

